<UserControl x:Class="Player.ControlBar"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:Player"
             xmlns:m="clr-namespace:Player"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             MinHeight="100"
             MaxHeight="670"
             d:DesignHeight="90"
             d:DesignWidth="800"
             Background="#F8F8F8"
             mc:Ignorable="d">
    <UserControl.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2"
                                   SnapsToDevicePixels="true"
                                   Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                   StrokeDashArray="1 2"
                                   StrokeThickness="1" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="Transparent" />
        <SolidColorBrush x:Key="Button.Static.Border" Color="#AAA" />
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FaFaFa" />
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1" />
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#F0F0F0" />
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B" />
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4" />
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5" />
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383" />

        <SolidColorBrush x:Key="ToggleButton.Checked.Border" Color="#FF6295B4" />
        <SolidColorBrush x:Key="ToggleButton.Checked.Foreground" Color="#FF6295B4" />

        <Style x:Key="CircleButtonStyle" TargetType="{x:Type ButtonBase}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}" />
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                        <Border x:Name="border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{Binding ActualWidth, RelativeSource={RelativeSource Mode=Self}}"
                                SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Focusable="False"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsDefaulted" Value="true">
                                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource Button.MouseOver.Background}" />
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.MouseOver.Border}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource Button.Pressed.Background}" />
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.Pressed.Border}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource Button.Disabled.Background}" />
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.Disabled.Border}" />
                                <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource Button.Disabled.Foreground}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="CircleToggleButtonStyle" BasedOn="{StaticResource CircleButtonStyle}" TargetType="{x:Type ToggleButton}">
            <Style.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="BorderBrush" Value="{StaticResource ToggleButton.Checked.Border}" />
                    <Setter Property="TextElement.Foreground" Value="{StaticResource ToggleButton.Checked.Foreground}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <local:SecondsToTimeConverter x:Key="secondsToTimeConverter" />
        <local:MultiplyConverter x:Key="multiplyConverter" />
        <local:IsMoreOrEqualThanConverter x:Key="isMoreOrEqualThanConverter" />
        <BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter" />
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="0.4*" />
            <ColumnDefinition Width="0.6*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition Height="30px" />
        </Grid.RowDefinitions>

        <TextBlock x:Name="TitleTBl"
                   Margin="6px 0 0 0"
                   d:Text="AURORA - Warrior.mp3"
                   FontSize="22"
                   FontWeight="Light"
                   TextTrimming="CharacterEllipsis"
                   TextWrapping="Wrap" />

        <Grid Grid.Column="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="auto" MinWidth="150px" MaxWidth="200" />
            </Grid.ColumnDefinitions>

            <StackPanel Margin="0 0 6px 0"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Orientation="Horizontal">

                <Button x:Name="Back10sBtn"
                        Width="30"
                        Height="30"
                        Margin="6px 0 6px 0"
                        d:Visibility="Visible"
                        Style="{DynamicResource CircleButtonStyle}"
                        Tag="{Binding RelativeSource={RelativeSource AncestorType=local:ControlBar}, Path=ActualWidth, Converter={StaticResource isMoreOrEqualThanConverter}, ConverterParameter={m:Int32 800}}"
                        Visibility="{Binding Path=Tag, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource booleanToVisibilityConverter}}"
                        Click="Back10sBtn_Click">
                    <Viewbox xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                             Width="24"
                             Stretch="Uniform">
                        <Canvas Width="24" Height="24">
                            <Path Data="M12.5,8C9.85,8 7.45,9 5.6,10.6L2,7V16H11L7.38,12.38C8.77,11.22 10.54,10.5 12.5,10.5C16.04,10.5 19.05,12.81 20.1,16L22.47,15.22C21.08,11.03 17.15,8 12.5,8Z" Fill="Black" />
                        </Canvas>
                    </Viewbox>
                </Button>

                <ToggleButton x:Name="ShuffleTbtn"
                              Width="40"
                              Height="40"
                              Checked="ShuffleTbtn_Checked"
                              Content="&#xE8B1;"
                              FontFamily="Segoe MDL2 Assets"
                              FontSize="20px"
                              Style="{StaticResource CircleToggleButtonStyle}"
                              ToolTip="Случайный порядок"
                              Unchecked="ShuffleTbtn_Unchecked" />

                <Button x:Name="BackBtn"
                        Width="45"
                        Height="45"
                        Margin="6px 0 6px 0"
                        Click="BackBtn_Click"
                        Content="&#xE892;"
                        FontFamily="Segoe MDL2 Assets"
                        FontSize="22px"
                        Style="{DynamicResource CircleButtonStyle}" />

                <ToggleButton x:Name="PlayPauseTBtn"
                              Width="50"
                              Height="50"
                              Checked="PlayPauseTBtn_Checked"
                              FontFamily="Segoe MDL2 Assets"
                              FontSize="26px"
                              IsChecked="False"
                              Unchecked="PlayPauseTBtn_Unchecked">
                    <ToggleButton.Style>
                        <Style BasedOn="{StaticResource CircleButtonStyle}" TargetType="ToggleButton">
                            <Setter Property="Content" Value="&#xE768;" />
                            <Style.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Content" Value="&#xE769;" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ToggleButton.Style>
                </ToggleButton>

                <Button x:Name="NextBtn"
                        Width="45"
                        Height="45"
                        Margin="6px 0 6px 0"
                        Click="NextBtn_Click"
                        Content="&#xE893;"
                        FontFamily="Segoe MDL2 Assets"
                        FontSize="22px"
                        Style="{DynamicResource CircleButtonStyle}" />


                <ToggleButton x:Name="RepeatTBtn"
                              Width="40"
                              Height="40"
                              FontFamily="Segoe MDL2 Assets"
                              FontSize="20px"
                              IsChecked="{x:Null}"
                              IsThreeState="True">
                    <ToggleButton.Style>
                        <Style BasedOn="{StaticResource CircleButtonStyle}" TargetType="ToggleButton">
                            <Setter Property="Content" Value="&#xE8EE;" />
                            <Setter Property="ToolTip" Value="Повторение: выкл" />
                            <Style.Triggers>
                                <Trigger Property="IsChecked" Value="False">
                                    <Setter Property="Content" Value="&#xE8ED;" />
                                    <Setter Property="ToolTip" Value="Повторение: трек" />
                                    <Setter Property="BorderBrush" Value="{StaticResource ToggleButton.Checked.Border}" />
                                    <Setter Property="TextElement.Foreground" Value="{StaticResource ToggleButton.Checked.Foreground}" />
                                </Trigger>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="ToolTip" Value="Повторение: плейлист" />
                                    <Setter Property="BorderBrush" Value="{StaticResource ToggleButton.Checked.Border}" />
                                    <Setter Property="TextElement.Foreground" Value="{StaticResource ToggleButton.Checked.Foreground}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ToggleButton.Style>
                </ToggleButton>

                <Button x:Name="Forward10sBtn"
                        Width="30"
                        Height="30"
                        Margin="6px 0 6px 0"
                        d:Visibility="Visible"
                        Click="Forward10sBtn_Click"
                        Style="{DynamicResource CircleButtonStyle}"
                        Tag="{Binding RelativeSource={RelativeSource AncestorType=local:ControlBar}, Path=ActualWidth, Converter={StaticResource isMoreOrEqualThanConverter}, ConverterParameter={m:Int32 800}}"
                        Visibility="{Binding Path=Tag, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource booleanToVisibilityConverter}}">
                    <Viewbox xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                             Width="22"
                             Stretch="Uniform">
                        <Canvas Width="24" Height="24">
                            <Path Data="M18.4,10.6C16.55,9 14.15,8 11.5,8C6.85,8 2.92,11.03 1.54,15.22L3.9,16C4.95,12.81 7.95,10.5 11.5,10.5C13.45,10.5 15.23,11.22 16.62,12.38L13,16H22V7L18.4,10.6Z" Fill="Black" />
                        </Canvas>
                    </Viewbox>
                </Button>
            </StackPanel>

            <Border Grid.Column="1"
                    Margin="6px 0"
                    Padding="4px"
                    VerticalAlignment="Center"
                    BorderBrush="#bbb"
                    BorderThickness="1"
                    CornerRadius="4">
                <DockPanel VerticalAlignment="Center">
                    <TextBlock VerticalAlignment="Center"
                               DockPanel.Dock="Left"
                               FontFamily="Segoe MDL2 Assets"
                               FontSize="20px"
                               Text="&#xE767;" />

                    <TextBlock Margin="0 0 0 6px"
                               HorizontalAlignment="Center"
                               d:Text="70%"
                               DockPanel.Dock="Top"
                               Text="{Binding ElementName=VolumeSl, Path=Value, Converter={StaticResource multiplyConverter}, ConverterParameter={m:Int32 100}, StringFormat={}{0}%}" />
                    <Slider x:Name="VolumeSl"
                            Margin="6px 0 6px 0"
                            d:Value="0.7"
                            IsSnapToTickEnabled="True"
                            Maximum="1"
                            Minimum="0"
                            TickFrequency="0.01" />

                </DockPanel>
            </Border>
        </Grid>

        <DockPanel Grid.Row="2" Grid.ColumnSpan="2" VerticalAlignment="Center">
            <TextBlock x:Name="TimeCurrentTBl"
                       MinWidth="{Binding ElementName=TimeMaxTBl, Path=ActualWidth}"
                       Margin="6px 0 6px 0"
                       d:Text="1:54"
                       DockPanel.Dock="Left"
                       Text="{Binding ElementName=TimeSl, Path=Value, Converter={StaticResource secondsToTimeConverter}}"
                       TextAlignment="Right" />
            <TextBlock x:Name="TimeMaxTBl"
                       MinWidth="30px"
                       Margin="6px 0 6px 0"
                       d:Text="3:43"
                       DockPanel.Dock="Right"
                       Text="{Binding ElementName=TimeSl, Path=Maximum, Converter={StaticResource secondsToTimeConverter}}" />

            <Slider x:Name="TimeSl"
                    DockPanel.Dock="Right"
                    IsSnapToTickEnabled="True"
                    Maximum="0"
                    PreviewMouseDown="TimeSl_PreviewMouseDown"
                    PreviewMouseUp="TimeSl_PreviewMouseUp"
                    TickFrequency="0.2"
                    Value="0" />
        </DockPanel>
    </Grid>
</UserControl>
